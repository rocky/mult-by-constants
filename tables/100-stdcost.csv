n	cost	search-status	sequence
0	1	completed	[constant 0]
1	0	completed	[noop]
2	1	completed	[<< 1]
3	2	completed	[<< 1, +1]
4	1	completed	[<< 2]
5	2	completed	[<< 2, +1]
6	3	completed	[<< 1, +1, << 1]
7	2	completed	[<< 3, -1]
8	1	completed	[<< 3]
9	2	completed	[<< 3, +1]
10	3	completed	[<< 2, +1, << 1]
11	4	completed	[<< 2, +1, << 1, +1]
12	3	completed	[<< 1, +1, << 2]
13	4	completed	[<< 1, +1, << 2, +1]
14	3	completed	[<< 3, -1, << 1]
15	2	completed	[<< 4, -1]
16	1	completed	[<< 4]
17	2	completed	[<< 4, +1]
18	3	completed	[<< 3, +1, << 1]
19	4	completed	[<< 3, +1, << 1, +1]
20	3	completed	[<< 2, +1, << 2]
21	4	completed	[<< 2, +1, << 2, +1]
22	5	completed	[<< 2, +1, << 1, +1, << 1]
23	4	completed	[<< 1, +1, << 3, -1]
24	3	completed	[<< 1, +1, << 3]
25	4	completed	[<< 1, +1, << 3, +1]
26	5	completed	[<< 1, +1, << 2, +1, << 1]
27	4	completed	[<< 3, +1, << 1, +(n)]
28	3	completed	[<< 3, -1, << 2]
29	4	completed	[<< 3, -1, << 2, +1]
30	3	completed	[<< 4, -1, << 1]
31	2	completed	[<< 5, -1]
32	1	completed	[<< 5]
33	2	completed	[<< 5, +1]
34	3	completed	[<< 4, +1, << 1]
35	4	completed	[<< 4, +1, << 1, +1]
36	3	completed	[<< 3, +1, << 2]
37	4	completed	[<< 3, +1, << 2, +1]
38	5	completed	[<< 3, +1, << 1, +1, << 1]
39	4	completed	[<< 2, +1, << 3, -1]
40	3	completed	[<< 2, +1, << 3]
41	4	completed	[<< 2, +1, << 3, +1]
42	5	completed	[<< 2, +1, << 2, +1, << 1]
43	6	completed	[<< 2, +1, << 2, +1, << 1, +1]
44	5	completed	[<< 2, +1, << 1, +1, << 2]
45	4	completed	[<< 4, -1, << 1, +(n)]
46	5	completed	[<< 1, +1, << 3, -1, << 1]
47	4	completed	[<< 1, +1, << 4, -1]
48	3	completed	[<< 1, +1, << 4]
49	4	completed	[<< 1, +1, << 4, +1]
50	5	completed	[<< 1, +1, << 3, +1, << 1]
51	4	completed	[<< 4, +1, << 1, +(n)]
52	5	completed	[<< 1, +1, << 2, +1, << 2]
53	6	completed	[<< 1, +1, << 2, +1, << 2, +1]
54	5	completed	[<< 3, +1, << 1, +(n), << 1]
55	4	completed	[<< 3, -1, << 3, -1]
56	3	completed	[<< 3, -1, << 3]
57	4	completed	[<< 3, -1, << 3, +1]
58	5	completed	[<< 3, -1, << 2, +1, << 1]
59	4	completed	[<< 4, -1, << 2, -1]
60	3	completed	[<< 4, -1, << 2]
61	4	completed	[<< 4, -1, << 2, +1]
62	3	completed	[<< 5, -1, << 1]
63	2	completed	[<< 6, -1]
64	1	completed	[<< 6]
65	2	completed	[<< 6, +1]
66	3	completed	[<< 5, +1, << 1]
67	4	completed	[<< 5, +1, << 1, +1]
68	3	completed	[<< 4, +1, << 2]
69	4	completed	[<< 4, +1, << 2, +1]
70	5	completed	[<< 4, +1, << 1, +1, << 1]
71	4	completed	[<< 3, +1, << 3, -1]
72	3	completed	[<< 3, +1, << 3]
73	4	completed	[<< 3, +1, << 3, +1]
74	5	completed	[<< 3, +1, << 2, +1, << 1]
75	4	completed	[<< 4, -1, << 2, +(n)]
76	5	completed	[<< 3, +1, << 1, +1, << 2]
77	6	completed	[<< 3, +1, << 1, +1, << 2, +1]
78	5	completed	[<< 2, +1, << 3, -1, << 1]
79	4	completed	[<< 2, +1, << 4, -1]
80	3	completed	[<< 2, +1, << 4]
81	4	completed	[<< 2, +1, << 4, +1]
82	5	completed	[<< 2, +1, << 3, +1, << 1]
83	6	completed	[<< 2, +1, << 3, +1, << 1, +1]
84	5	completed	[<< 2, +1, << 2, +1, << 2]
85	4	completed	[<< 4, +1, << 2, +(n)]
86	7	completed	[<< 2, +1, << 2, +1, << 1, +1, << 1]
87	6	completed	[<< 2, +1, << 1, +1, << 3, -1]
88	5	completed	[<< 2, +1, << 1, +1, << 3]
89	6	completed	[<< 2, +1, << 1, +1, << 3, +1]
90	5	completed	[<< 4, -1, << 1, +(n), << 1]
91	6	completed	[<< 4, -1, << 1, +(n), << 1, +1]
92	5	completed	[<< 1, +1, << 3, -1, << 2]
93	4	completed	[<< 5, -1, << 1, +(n)]
94	5	completed	[<< 1, +1, << 4, -1, << 1]
95	4	completed	[<< 1, +1, << 5, -1]
96	3	completed	[<< 1, +1, << 5]
97	4	completed	[<< 1, +1, << 5, +1]
98	5	completed	[<< 1, +1, << 4, +1, << 1]
99	4	completed	[<< 5, +1, << 1, +(n)]
100	5	completed	[<< 1, +1, << 3, +1, << 2]
